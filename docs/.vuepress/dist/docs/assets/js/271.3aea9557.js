(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{745:function(t,e,a){"use strict";a.r(e);var r=a(47),o=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"available-plugins"}},[e("a",{staticClass:"header-link",attrs:{href:"#available-plugins"}},[e("span",{staticClass:"header-framework"},[t._v("React Data Grid")]),t._v("Available plugins")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Plugin Name")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/auto-column-size/"}},[t._v("AutoColumnSize")])],1),t._v(" "),e("td",[t._v("Automatically adjusts the column's width to the size of the content.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/auto-row-size/"}},[t._v("AutoRowSize")])],1),t._v(" "),e("td",[t._v("Automatically adjusts the row's height to the size of the content.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/autofill/"}},[t._v("Autofill")])],1),t._v(" "),e("td",[t._v("Drag the fill handle - a square in the bottom right corner of the cell to fill cells with the data series.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/bind-rows-with-headers/"}},[t._v("BindRowsWithHeaders")])],1),t._v(" "),e("td",[t._v("Bind rows with headers to lock the row number, always displaying them side by side. Especially useful when each row has its unique ID.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/collapsible-columns/"}},[t._v("CollapsibleColumns")])],1),t._v(" "),e("td",[t._v("Expand and collapse columns.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/column-sorting/"}},[t._v("ColumnSorting")])],1),t._v(" "),e("td",[t._v("Sort data in ascending or descending order throughout the column (note: this plugin also represents the ability to sort rows, its name might cause confusion).")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/column-summary/"}},[t._v("ColumnSummary")])],1),t._v(" "),e("td",[t._v("Make pre-defined basic calculations (such as average, sum, max, min) and display the results.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/comments/"}},[t._v("Comments")])],1),t._v(" "),e("td",[t._v("Provide an additional note about the cell to help better understand its content.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/context-menu/"}},[t._v("ContextMenu")])],1),t._v(" "),e("td",[t._v("Right-click to open a context menu.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/copy-paste/"}},[t._v("CopyPaste")])],1),t._v(" "),e("td",[t._v("Copy, cut, and paste data.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/custom-borders/"}},[t._v("CustomBorders")])],1),t._v(" "),e("td",[t._v("Apply a custom border style around a single cell or a range of cells.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/drag-to-scroll/"}},[t._v("DragToScroll")])],1),t._v(" "),e("td",[t._v("Drag the selection outside of the viewport to enable scrolling.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/dropdown-menu/"}},[t._v("DropdownMenu")])],1),t._v(" "),e("td",[t._v("Add a menu to the column header to enable additional operations for the column.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/export-file/"}},[t._v("ExportFile")])],1),t._v(" "),e("td",[t._v("Export the data to a CSV file (note: this plugin provides a capability to export the data to only a CSV file type, its name might cause confusion).")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/filters/"}},[t._v("Filters")])],1),t._v(" "),e("td",[t._v("Display rows that meet your criteria and hide the rest.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/formulas/"}},[t._v("Formulas")])],1),t._v(" "),e("td",[t._v("Use Excel-like functions inside of cells to perform calculations.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/hidden-columns/"}},[t._v("HiddenColumns")])],1),t._v(" "),e("td",[t._v("Hide specific columns.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/hidden-rows/"}},[t._v("HiddenRows")])],1),t._v(" "),e("td",[t._v("Hide specific rows.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/manual-column-freeze/"}},[t._v("ManualColumnFreeze")])],1),t._v(" "),e("td",[t._v("Pin the columns to the left to keep them visible while scrolling.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/manual-column-move/"}},[t._v("ManualColumnMove")])],1),t._v(" "),e("td",[t._v("Drag a column to change its order in the data grid.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/manual-column-resize/"}},[t._v("ManualColumnResize")])],1),t._v(" "),e("td",[t._v("Drag the sizing handle to change the width of a column.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/manual-row-move/"}},[t._v("ManualRowMove")])],1),t._v(" "),e("td",[t._v("Drag a row to change its order in the data grid.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/manual-row-resize/"}},[t._v("ManualRowResize")])],1),t._v(" "),e("td",[t._v("Drag the sizing handle to change the height of a row.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/merge-cells/"}},[t._v("MergeCells")])],1),t._v(" "),e("td",[t._v("Span the cells across multiple rows or columns.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/multi-column-sorting/"}},[t._v("MultiColumnSorting")])],1),t._v(" "),e("td",[t._v("Sort the rows by multiple columns.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/nested-headers/"}},[t._v("NestedHeaders")])],1),t._v(" "),e("td",[t._v("Create a nested, hierarchical structure of column headers to put your data into groups.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/nested-rows/"}},[t._v("NestedRows")])],1),t._v(" "),e("td",[t._v("Enable editable views of data sources with nested (tree/parent-child) structures.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/persistent-state/"}},[t._v("PersistentState")])],1),t._v(" "),e("td",[t._v("Save the state of column sorting, column positions, and column sizes in local storage to preserve the table state between page reloads.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/search/"}},[t._v("Search")])],1),t._v(" "),e("td",[t._v("Search for specific values in the displayed data across the table.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/trim-rows/"}},[t._v("TrimRows")])],1),t._v(" "),e("td",[t._v("Exclude the specific rows from being rendered and calculated by the data grid. This feature is mainly used internally, for example, in the filter plugin.")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/react-data-grid/api/undo-redo/"}},[t._v("UndoRedo")])],1),t._v(" "),e("td",[t._v("Undo or redo changes made by the user.")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);