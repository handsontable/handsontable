@use "../../utils/mixins";

// Handsontable Input
//  Used in Dropdown Menu

@mixin output {
  .handsontable {
    .htUIRadio {
      position: relative;
      display: inline-flex;
      margin: 0;
      padding: var(--ht-gap-size) calc(2 * var(--ht-gap-size));
      padding-bottom: 0;
      align-items: center;
      gap: var(--ht-gap-size);
      cursor: pointer;

      &:first-child {
        padding-inline-start: 0;
      }

      > input[type="radio"] {
        position: relative;
        width: var(--ht-checkbox-size);
        height: var(--ht-checkbox-size);
        margin: 0;
        appearance: none;
        cursor: pointer;

        // Circle overlay
<<<<<<< HEAD
        &:before {
          @include mixins.pseudo;
=======
        &::before {
          @include mixins.pseudo;

>>>>>>> develop
          position: absolute;
          inset: 0;
          border-radius: calc(0.5 * var(--ht-checkbox-size));
          border: 1px solid var(--ht-checkbox-border-color);
          background-color: var(--ht-checkbox-background-color);
        }

        // Circle
<<<<<<< HEAD
        &:after {
          @include mixins.pseudo;
=======
        &::after {
          @include mixins.pseudo;

>>>>>>> develop
          position: absolute;
          color: var(--ht-checkbox-background-color);
        }

        &:checked {
          // Circle overlay
<<<<<<< HEAD
          &:before {
=======
          &::before {
>>>>>>> develop
            border-color: var(--ht-checkbox-checked-border-color);
          }

          // Circle
<<<<<<< HEAD
          &:after {
=======
          &::after {
>>>>>>> develop
            color: var(--ht-checkbox-checked-background-color);
          }

          &:disabled {
            cursor: initial;

            // Circle overlay
<<<<<<< HEAD
            &:before {
=======
            &::before {
>>>>>>> develop
              border-color: var(--ht-checkbox-checked-disabled-border-color);
            }

            // Circle
<<<<<<< HEAD
            &:after {
=======
            &::after {
>>>>>>> develop
              color: var(--ht-checkbox-checked-disabled-background-color);
            }
          }

          &:focus {
            // Circle overlay
<<<<<<< HEAD
            &:before {
=======
            &::before {
>>>>>>> develop
              border-color: var(--ht-checkbox-checked-focus-background-color);
            }

            // Circle
<<<<<<< HEAD
            &:after {
=======
            &::after {
>>>>>>> develop
              color: var(--ht-checkbox-checked-focus-background-color);
            }
          }
        }

        &:disabled {
<<<<<<< HEAD
          // Circle overlay
          &:before {
            border-color: var(--ht-checkbox-disabled-border-color);
          }

          // Circle
          &:after {
            color: var(--ht-checkbox-disabled-background-color);
          }
        }

        &:focus {
          // Circle overlay
          &:before {
            border-color: var(--ht-checkbox-focus-background-color);
          }

          // Circle
          &:after {
            color: var(--ht-checkbox-focus-background-color);
          }
        }

        &:disabled {
          cursor: initial;

          // Circle overlay
          &:before {
=======
          cursor: initial;

          // Circle overlay
          &::before {
>>>>>>> develop
            border-color: var(--ht-checkbox-disabled-border-color);
          }

          // Circle
<<<<<<< HEAD
          &:after {
            color: var(--ht-checkbox-disabled-background-color);
          }
        }
=======
          &::after {
            color: var(--ht-checkbox-disabled-background-color);
          }
        }

        &:focus {
          // Circle overlay
          &::before {
            border-color: var(--ht-checkbox-focus-background-color);
          }

          // Circle
          &::after {
            color: var(--ht-checkbox-focus-background-color);
          }
        }
>>>>>>> develop
      }

      label {
        vertical-align: middle;
        cursor: pointer;
<<<<<<< HEAD

        &:before {
          @include mixins.pseudo;
=======
        color: inherit;

        &::before {
          @include mixins.pseudo;

>>>>>>> develop
          position: absolute;
          inset: 0;
        }
      }
    }
  }
}
