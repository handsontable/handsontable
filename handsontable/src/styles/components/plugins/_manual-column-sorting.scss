@use "../../utils/mixins";

// Manual Column Sorting

@mixin output {
  .handsontable {
    .htRight {
      .columnSorting {
        &.sortAction {
          margin-inline-end: calc(var(--ht-gap-size));
        }
      }
    }

    .columnSorting {
      position: relative;

      &.sortAction {
        margin-inline-end: calc(calc(var(--ht-icon-size) * -1));

        &.ascending,
        &.descending {
          margin-inline-end: calc(var(--ht-icon-size) + var(--ht-gap-size));
        }

        &:hover {
          text-decoration: none;
          cursor: pointer;
        }

        &:before {
          @include mixins.pseudo;
          width: var(--ht-icon-size);
          position: absolute;
          top: 50%;
          left: 100%;
          transform: translateY(-50%);
        }
      }
    }
  }

  [dir="rtl"] {
    .handsontable {
      .columnSorting {
        &.sortAction {
          &:before {
            left: auto;
            right: 100%;
          }
        }
      }
    }
  }

  .htGhostTable
    .htCore
    span.colHeader.columnSorting:not(.indicatorDisabled)::before {
    content: "*";
    display: inline-block;
    position: relative;
    /* The multi-line header and header with longer text need more padding to not hide arrow,
        we make header wider in `GhostTable` to make some space for arrow which is positioned absolutely in the main table */
    padding-right: 20px;
  }
}
