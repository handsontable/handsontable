@use "../utils/mixins";

// Handsontable Base Row and Col

@mixin output {
  .handsontable {
    position: relative;
    @include mixins.font-family;
    font-size: var(--ht-font-size, 14px);
    line-height: var(--ht-line-height, 18px);
    font-weight: var(--ht-font-weight);
    color: var(--ht-foreground-color);
    /* Miscellaneous */
    touch-action: manipulation;

    &.ht-wrapper {
      border-radius: var(--ht-wrapper-border-radius);

      &:before {
        @include mixins.pseudo;
        position: absolute;
        inset: 0;
        border: var(--ht-wrapper-border-width) solid
          var(--ht-wrapper-border-color);
        border-radius: var(--ht-wrapper-border-radius);
        z-index: 999;
        pointer-events: none;
      }
    }

    .ht_master,
    .htCore {
      background-color: var(--ht-background-color, #ffffff);
    }

    // Cell and Header
    th,
    td {
      height: var(--ht-row-height, 28px);
      padding: var(--ht-cell-vertical-padding, 4px)
        var(--ht-cell-horizontal-padding, 8px);
      vertical-align: top;
      border-top-width: 0;
      border-inline-start-width: 0;
      border-inline-end-width: 1px;
      border-bottom-width: 1px;
      border-style: solid;
      border-color: var(--ht-border-color);
      font-size: var(--ht-font-size, 14px);
      line-height: var(--ht-line-height, 20px);
      white-space: pre-wrap;
      overflow: hidden;
      outline: none;
      outline-width: 0;
      empty-cells: show;
      box-sizing: border-box;
      color: var(--ht-foreground-color);
      background-color: var(--ht-background-color, #ffffff);

      &.invisibleSelection {
        outline: none;

        &::selection {
          background: transparent;
        }
      }
    }

    // Cell
    td {
      &:first-of-type {
        border-inline-start-width: 1px;
      }
    }

    // Header
    th {
      position: relative;
      overflow: visible;
      text-align: center;
      font-weight: var(--ht-header-font-weight);
      white-space: nowrap;
      color: var(--ht-header-foreground-color);
      background-color: var(--ht-header-background-color, #f7f7f9);

      &:last-child {
        /* Foundation framework fix */
        border-inline-start-width: 0;
        border-inline-end-width: 1px;
        border-bottom-width: 1px;
      }

      &:first-child,
      &:nth-child(2) {
        border-inline-start-width: 1px;
      }

      &.current {
        box-shadow: inset 0 0 0 1px var(--ht-cell-selection-border-color);
      }

      &.active {
        color: var(--ht-header-active-foreground-color);
        background-color: var(--ht-header-active-background-color, #1a42e8);
      }

      &.ht__highlight {
        color: var(--ht-header-highlighted-foreground-color);
        background-color: var(--ht-header-highlighted-background-color);

        &:before {
          @include mixins.pseudo;
          position: absolute;
          inset: auto -1px -1px -1px;
          height: var(--ht-header-highlighted-shadow-size);
          background-color: var(--ht-accent-color);
        }
      }

      &.ht__active_highlight {
        color: var(--ht-header-active-foreground-color, #ffffff);
        background-color: var(--ht-header-active-background-color, #1a42e8);
        border-color: var(--ht-header-active-border-color, #e5e5e9);
        box-shadow: -1px 0 0 0 var(--ht-header-active-border-color, #1a42e8);

        &:before {
          background-color: var(--ht-header-active-background-color);
        }
      }
    }

    // Header in Col
    thead th {
      padding: 0;

      .relative {
        padding: var(--ht-cell-vertical-padding, 4px)
          var(--ht-cell-horizontal-padding, 8px);
        overflow: hidden;

        .colHeader {
          text-overflow: ellipsis;
          overflow: hidden;
          vertical-align: top;
          max-width: calc(100% + 1px);
        }

        &:has(.collapsibleIndicator, .changeType) {
          .colHeader {
            max-width: calc(100% - (var(--ht-icon-size) + var(--ht-gap-size)));
          }
        }
      }
    }

    thead tr:not(:last-child) th {
      /* Fix for - nested columns with hidden column  */
      overflow: hidden;
    }

    // Header in Row
    tbody th {
      background-color: var(--ht-header-row-background-color, #f7f7f9);

      &.ht__highlight {
        &:before {
          width: var(--ht-header-highlighted-shadow-size);
          height: auto;
          inset: 0 -1px -1px auto;
        }
      }

      &.ht__active_highlight {
        box-shadow: 0 -1px 0 0 var(--ht-header-active-border-color, #1a42e8);
      }
    }

    // Base classes
    .hide {
      display: none;
    }

    .relative {
      position: relative;
      box-sizing: border-box;
    }

    .wtHider {
      width: 0;
    }

    .wtSpreader {
      position: relative;
      /* must be 0, otherwise blank space appears in scroll demo after scrolling max to the right */
      width: 0;
      height: auto;
    }

    .htAutoSize {
      position: absolute;
      left: -99000px;
      top: -99000px;
      visibility: hidden;
    }

    .htFocusCatcher {
      position: absolute;
      width: 0;
      height: 0;
      margin: 0;
      padding: 0;
      border: 0;
      opacity: 0;
      z-index: -1;
    }

    table,
    tbody,
    thead,
    input,
    textarea,
    div {
      box-sizing: content-box;
    }
    input,
    textarea {
      min-height: initial;
    }

    .htCore {
      width: 0;
      margin: 0;
      border-width: 0;
      border-spacing: 0;
      border-collapse: separate;
      outline-width: 0;
      table-layout: fixed;
      cursor: default;
    }

    col {
      width: 64px;

      &.rowHeader {
        width: 64px;
      }

      &.hidden {
        width: 0 !important;
      }
    }

    span.colHeader {
      display: inline-block;
      line-height: var(--ht-line-height, 20px);
    }

    tr.hidden {
      display: none;

      td,
      th {
        display: none;
      }
    }

    a {
      color: var(--ht-link-color);

      &:hover {
        color: var(--ht-link-hover-color);
      }
    }

    // Visual fixes
    // It removes double right border from first column header when row headers are disabled
    .ht_clone_top th:nth-child(2) {
      border-inline-start-width: 0;
      border-inline-end-width: 1px;
    }

    &.htRowHeaders thead tr th:nth-child(2) {
      border-inline-start-width: 1px;
    }

    tr:first-child {
      th,
      td {
        border-top-width: 1px;
      }
    }

    .ht_master:not(.innerBorderInlineStart):not(.emptyColumns) ~ .handsontable {
      tbody tr th,
      &:not(.ht_clone_top) thead tr th:first-child {
        border-inline-end-width: 0;
        border-inline-start-width: 1px;
      }
    }

    //  innerBorderTop - Property controlled by top overlay
    //  innerBorderBottom - Property controlled by bottom overlay
    .ht_master:not(.innerBorderTop):not(.innerBorderBottom) {
      thead tr:last-child th,
      & ~ .handsontable thead tr:last-child th,
      thead tr.lastChild th,
      & ~ .handsontable thead tr.lastChild th {
        border-bottom-width: 0;
      }
    }

    // Scroll bar
    & {
      scrollbar-width: thin;
      scrollbar-color: var(--ht-scrollbar-thumb-color)
        var(--ht-scrollbar-track-color);
    }
    &::-webkit-scrollbar-track {
      border-radius: var(--ht-scrollbar-border-radius);
    }

    .ht_master table.htCore > thead,
    .ht_master table.htCore > tbody > tr > th,
    .ht_clone_inline_start table.htCore > thead {
      visibility: hidden;
    }
  }

  .ht_master,
  .ht_clone_inline_start,
  .ht_clone_top,
  .ht_clone_bottom {
    overflow: hidden;

    .wtHolder {
      overflow: hidden;
    }
  }

  .ht_master .wtHolder {
    overflow: auto;
  }

  // Row even & odd
  tr {
    &.ht__row_even {
      td {
        background-color: var(--ht-row-even-background-color, #ffffff);
      }
    }

    &.ht__row_odd {
      td {
        background-color: var(--ht-row-odd-background-color, #ffffff);
      }
    }
  }
}
