name: Docs Staging Deployment

env:
  GHA_DOCKER_TAG_NEXT: docker.pkg.github.com/${{ github.repository }}/handsontable-documentation:next
  GHA_DOCKER_TAG_SHA: docker.pkg.github.com/${{ github.repository }}/handsontable-documentation:${{ github.sha }}

on:
  pull_request:
  push:
    branches-ignore:
      - 'prod-docs/**'
      - 'master'
    paths:
      - 'docs/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./docs/

jobs:
  preview:
    # environment:
    #   name: approvers
    name: Build and push Preview to Netlify
    if: ${{ github.ref != 'refs/heads/prod-docs/latest' }} # Exclude the prod-docs-latest branch from triggering the workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # https://github.com/actions/checkout/releases/tag/v4.1.1

      - name: Use Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # https://github.com/actions/setup-node/releases/tag/v4.0.2
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Find PR
        uses: jwalton/gh-find-current-pr@7ada613939e2a233c83a1320679446fa1c6bdcb9 # https://github.com/jwalton/gh-find-current-pr/tree/v1.3.2
        id: pr-finder

      - name: Get PR details
        id: get-pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number ||  ${{ steps.pr-finder.outputs.pr }}
            });
            
            console.log(`PR #${context.issue.number} details fetched`);
            console.log(`Source branch: ${pullRequest.head.ref}`);
            console.log(`Target branch: ${pullRequest.base.ref}`);
            
            // Set outputs to use in subsequent steps
            core.setOutput('source_branch', pullRequest.head.ref);
            core.setOutput('target_branch', pullRequest.base.ref);
            core.setOutput('pr_owner', pullRequest.head.repo.owner.login);
            core.setOutput('pr_repo', pullRequest.head.repo.name);
            
            return pullRequest;
          result-encoding: string

      - name: Install Netlify dependencies
        run: |
           cd netlify 
           npm i 
           npm install netlify-cli -g

      - name: Run the create or get Netlify Page proccess. Save the Netlify vars in a file
        run: | 
          cd netlify  
          node createOrGet.mjs  
          cat NETLIFY_VARS >> $GITHUB_ENV 
          mkdir docs
          echo "hello world" >> docs/index.html
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_PREVIEW_AUTH_TOKEN }}
          BRANCH_NAME_PREFIX: dev-handsontable-
          BRANCH_NAME: ${{ steps.get-pr.outputs.source_branch }}     


      # - name: Publish sticky comment in PR. Docs are being built
      #   uses: marocchino/sticky-pull-request-comment@adca94abcaf73c10466a71cc83ae561fd66d1a56 # https://github.com/marocchino/sticky-pull-request-comment/tree/v2.3.0
      #   with:
      #     number: ${{ steps.pr-finder.outputs.pr }}
      #     message: |
      #       üèóÔ∏è Preview documentation is being built/rebuilt.
      #       Current staging version of documentation will be available at: [${{ env.NETLIFY_SITE_URL }}/docs](${{ env.NETLIFY_SITE_URL }}/docs)

      # - name: Install the documentation dependencies
      #   run: |
      #     npm ci

      # - name: Install the monorepo dependencies and build the packages
      #   run: |
      #     cd ..
      #     npm ci
      #     npm run all build -- --e examples visual-tests

      # - name: Generate API references
      #   run: |
      #     npm run docs:api

      # - name: Build docs (for staging preview)
      #   run: |
      #     npm run docs:build:preview

      # - name: Build and deploy the preview to Netlify
      #   run: |
      #     cd netlify  
      #     mkdir -p docs/docs
      #     mv ../.vuepress/dist/docs docs
      #     ./build_previous_versions.sh
      #     cp _redirects docs/_redirects

      - name: Publish preview to Netlify
        run: |
          cd netlify  
          ls -la
          pwd
          netlify unlink
          netlify link --id ${{ env.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_PREVIEW_AUTH_TOKEN }}
          #netlify deploy --build --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_PREVIEW_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}    

      - name: Publish sticky comment in PR
        uses: marocchino/sticky-pull-request-comment@adca94abcaf73c10466a71cc83ae561fd66d1a56 # https://github.com/marocchino/sticky-pull-request-comment/tree/v2.3.0
        with:
          number: ${{ steps.pr-finder.outputs.pr }}
          message: |
            ‚úÖ Preview documentation is is available now
            Current staging version of documentation is available at: [${{ env.NETLIFY_SITE_URL }}/docs](${{ env.NETLIFY_SITE_URL }}/docs)
      
