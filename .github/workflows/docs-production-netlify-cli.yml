name: Docs Production Deployment - Netlify CLI

env:
  NODE_VERSION: 20
  DOCSEARCH_API_KEY: ${{ secrets.DOCSEARCH_API_KEY }}
  DOCSEARCH_APP_ID: ${{ secrets.DOCSEARCH_APP_ID }}

on:
  create:
    branches:
      - 'prod-docs/[0-9]+\\.[0-9]+'
  push:
    branches:
      - 'prod-docs/[0-9]+\\.[0-9]+'
      #!TODO remove feature branch after the merge
      - feature/dev-issue-1790
  workflow_dispatch:

defaults:
  run:
    working-directory: ./docs/

jobs:
  check-version:
    name: Check Docs Version and Branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Print the list of prod-docs branches without fetching
        run: git ls-remote --heads origin | awk '{print $2}' | sed 's/refs\/heads\///' | grep 'prod-docs/'

      - name: Obtain the docs latest version
        working-directory: ./  
        run: |
          docs_latest_version=$(git ls-remote --heads origin | grep 'prod-docs/[0-9]\+\.[0-9]\+' | sed 's|.*/prod-docs/||' | sort -V | tail -n 1)
          echo "The docs latest version: $docs_latest_version"
          echo "DOCS_LATEST_VERSION=$docs_latest_version" >> $GITHUB_ENV

      - name: Validate Docs version
        run: |
          if [ -z "$DOCS_LATEST_VERSION" ]; then
            echo "Docs version is empty";
            exit 1;
          fi

      - name: Check if branch matches the latest version
        id: check-branch
        run: |
          FEATURE_BRANCH="feature/dev-issue-1790"
          if [[ "${{ github.ref_name }}" != "$DOCS_LATEST_VERSION" ]]; then
            echo "The current branch is not the latest version and will not be deployed to Netlify"
            echo "::set-output name=continue::false"
            exit 0
          elif [[ "${{ github.ref_name }}" =~ $FEATURE_BRANCH ]]; then
            echo "Branch matches: ${{ github.ref_name }}."
            echo "::set-output name=continue::true"
          else
            echo "::set-output name=continue::true"
            echo "Branch matches the latest version"
          fi

      - name: Stop if branch does not match
        if: steps.check-branch.outputs.continue == 'false'
        run: exit 0

  netlify-deploy:
    name: Build Docs
    needs: check-version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # https://github.com/actions/checkout/releases/tag/v4.1.1
      - name: Print the list of prod-docs branches without fetching
        run: git ls-remote --heads origin | awk '{print $2}' | sed 's/refs\/heads\///' | grep 'prod-docs/'

      - name: Remove local branch if it exists
        run: |
          git branch -D prod-docs/latest || true

      - name: Recreate the docs latest branch
        run: |
          git fetch origin prod-docs/$DOCS_LATEST_VERSION
          git checkout origin/prod-docs/$DOCS_LATEST_VERSION
          git checkout -b prod-docs/latest
          git push --force --set-upstream origin prod-docs/latest

      # this step includes source files, so it can be build even if the feature branch is not merged yet
      - name: Branch Patch
        run: |
          git fetch origin feature/dev-issue-1790
          git checkout feature/dev-issue-1790 ./docs/netlify ./docs/package.json ./docs/package-lock.json docs/.vuepress/theme/components/FrameworksDropdown.vue docs/.vuepress/helpers.js docs/netlify.toml
        working-directory: ./

      - name: Preserve the dist directory
        run: |
          echo "!/.vuepress/dist" >> .gitignore

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # https://github.com/actions/setup-node/releases/tag/v4.0.2
        with:
          # cache-dependency-path: ./latest/package-lock.json
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Dependencies
        run: |
          npm ci

      - name: Docs build
        run: |
          npm run docs:build:production:netlify
        working-directory: ./docs/

      - name : Add changes to the commit
        run:  |
          git add .

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Docs: build production"
          commit_user_name: "Docs Deployment"
          commit_user_email: "docs-deployment@handsontable.com"

      - name: Deploy to Netlify
        run: |
          npx netlify env:set DOCS_LATEST_VERSION=$DOCS_LATEST_VERSION --context production
          npx netlify env:list
          npx netlify deploy --prod --prodIfUnlocked --dir .vuepress/dist/docs/ --site $NETLIFY_SITE_ID

        env:
            NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            DOCS_LATEST_VERSION: ${{ env.DOCS_LATEST_VERSION }}

      - name: Update Environment Variables on Netlify
        run: |
          curl -X PATCH "https://api.netlify.com/api/v1/accounts/${NETLIFY_ACCOUNT_ID}/env/DOCS_LATEST_VERSION?site_id=${NETLIFY_SITE_ID}" \
            -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{
              "context": "production",
              "value": "'"${DOCS_LATEST_VERSION}"'"
            }'
        env:
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            DOCS_LATEST_VERSION: ${{ env.DOCS_LATEST_VERSION }}
            NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            NETLIFY_ACCOUNT_ID: handsonable-team
